{"name": "test_login_form_submission_negative[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Framework.tests.test_LoginPage.TestLoginPage object at 0x103a72620>\n\n    @pytest.mark.regression\n    def test_login_form_submission_negative(self):\n        self.login = LoginPage(self.driver)\n        self.login.get_credentials(TestData.USERNAME2, TestData.PASSWORD2)\n>       self.login.get_admin(role=False)\n\nFramework/tests/test_LoginPage.py:112: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nFramework/pageObjects/LoginPage.py:126: in get_admin\n    vis_modal = self.is_visible(self.modal)\nFramework/utilities/BaseClass.py:39: in is_visible\n    element = WebDriverWait(self.driver, 15).until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2e16dd5629e55d204469c50a4901e9e8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x103c2cc10>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException"}, "attachments": [{"name": "log", "source": "809f5c1e-66fa-40ef-be7d-7cef220b3c17-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1657720750192, "stop": 1657720765564, "uuid": "e3106212-4b67-4fa7-8518-6f092e3746f9", "historyId": "b7381690a588e847c4d02cdd2868e776", "testCaseId": "b75639520991d4d80b98b4da6909db42", "fullName": "Framework.tests.test_LoginPage.TestLoginPage#test_login_form_submission_negative", "labels": [{"name": "tag", "value": "regression"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Framework.tests"}, {"name": "suite", "value": "test_LoginPage"}, {"name": "subSuite", "value": "TestLoginPage"}, {"name": "host", "value": "Slomos-MacBook-Pro.local"}, {"name": "thread", "value": "67061-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Framework.tests.test_LoginPage"}]}