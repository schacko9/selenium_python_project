{"name": "test_login_form_submission_positive[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Framework.tests.test_LoginPage.TestLoginPage object at 0x10763a320>\n\n    @pytest.mark.regression\n    def test_login_form_submission_positive(self):\n        self.login = LoginPage(self.driver)\n        self.login.get_credentials(TestData.USERNAME, TestData.PASSWORD)\n>       self.login.get_admin(role=False)\n\nFramework/tests/test_LoginPage.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nFramework/pageObjects/LoginPage.py:126: in get_admin\n    vis_modal = self.is_visible(self.modal)\nFramework/utilities/BaseClass.py:39: in is_visible\n    element = WebDriverWait(self.driver, 15).until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0f16c04f249af7b377a9996477335318\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x1079c41f0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException"}, "attachments": [{"name": "log", "source": "10803023-5518-4b04-ac21-3b2a74be2c16-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1657720376779, "stop": 1657720394209, "uuid": "8925fdc3-fc7e-410e-9039-9dcfba369c89", "historyId": "8b6ae3268d896e797d755f313c0c9a75", "testCaseId": "1e8bb8b1449dd27ae566387b55ce8df8", "fullName": "Framework.tests.test_LoginPage.TestLoginPage#test_login_form_submission_positive", "labels": [{"name": "tag", "value": "regression"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Framework.tests"}, {"name": "suite", "value": "test_LoginPage"}, {"name": "subSuite", "value": "TestLoginPage"}, {"name": "host", "value": "Slomos-MacBook-Pro.local"}, {"name": "thread", "value": "66135-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Framework.tests.test_LoginPage"}]}